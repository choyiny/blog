<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>choyin</title>
    <link>https://pages.choy.in/blog/</link>
    <description>Recent content on choyin</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 21 Dec 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://pages.choy.in/blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>FOSSASIA and Google Code-in 2015</title>
      <link>https://pages.choy.in/blog/posts/fossasia/</link>
      <pubDate>Mon, 21 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://pages.choy.in/blog/posts/fossasia/</guid>
      <description>&lt;p&gt;Officially joining the FOSSASIA community with me added to the &lt;a href=&#34;http://gci15.fossasia.org&#34;&gt;FOSSASIA Google Code-in 2015 website!&lt;/a&gt;! Completing Tasks are loads of fun Here&amp;rsquo;s a program to see if you are old enough to drink:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(&amp;quot;Are you old enough to drink?&amp;quot;)

age = int(input(&amp;quot;Please enter your age: &amp;quot;))

drinkingage = int(18)
whencanidrink = drinkingage - age


if age &amp;gt;= drinkingage:
  print(&amp;quot;You can drink, congratulations!&amp;quot;)

elif 1 &amp;lt; age &amp;lt; drinkingage:
  print(&amp;quot;You cannot drink, but you can in &amp;quot; + str(whencanidrink) + &amp;quot; years!&amp;quot;)

else:
  print(&amp;quot;Your age is not recognizable by us!!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you are between 13 and 17 years old you should join Google Code-in right &lt;a href=&#34;https://codein.withgoogle.com/&#34;&gt;here&lt;/a&gt;. Dont hesitate, contributing to the Open Source Community is fun!&lt;/p&gt;

&lt;p&gt;EDIT (29/12/2015): Below are repositories to all the tasks I have completed: (Tasks will be added here when I complete them)
* &lt;a href=&#34;https://github.com/hkminegod/GCI2015/tree/gh-pages&#34;&gt;Javascript: Lights Out!&lt;/a&gt;
* &lt;a href=&#34;https://pages.choy.in&#34;&gt;Website: Host a website with Jekyll on github using github pages&lt;/a&gt;
* &lt;a href=&#34;https://pages.choy.in/blog/posts/how-to-deploy-hugo/&#34;&gt;Hugo: Deploy a blog using Hugo Github pages.&lt;/a&gt;
* &lt;a href=&#34;http://gci15.fossasia.org/&#34;&gt;Website: Add your photo to the GCI FOSSASIA Site Student Section and Tweet about it&lt;/a&gt;
* &lt;a href=&#34;https://github.com/hkminegod/GCI2015/tree/master/python&#34;&gt;Python: Your first program in an open source ide&lt;/a&gt;
* &lt;a href=&#34;http://gci15.fossasia.org/&#34;&gt;Website: Add a &amp;ldquo;Thank you for contributing&amp;rdquo; in another language to the FOSSASIA GCI website&lt;/a&gt;
* &lt;a href=&#34;https://github.com/hkminegod/GCI2015/tree/gh-pages&#34;&gt;Website: Get Geolocation from browser&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to deploy a Hugo blog using Github Pages?</title>
      <link>https://pages.choy.in/blog/posts/how-to-deploy-hugo/</link>
      <pubDate>Mon, 21 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://pages.choy.in/blog/posts/how-to-deploy-hugo/</guid>
      <description>

&lt;p&gt;Hello! Today I am going to teach you how to setup Hugo on Github Pages, a static blog (website) engine. Well, who doesn&amp;rsquo;t like blogging on an open source platform with open source software?&lt;/p&gt;

&lt;p&gt;This tutorial assumes you have basic understanding of git and github. If you don&amp;rsquo;t know git, here is an &lt;a href=&#34;https://try.github.io/levels/1/challenges/1&#34;&gt;amazing crashcourse&lt;/a&gt; for you!&lt;/p&gt;

&lt;h4 id=&#34;download-and-install-hugo:b970542703247f031f3abee5b7b4e900&#34;&gt;Download and install Hugo&lt;/h4&gt;

&lt;p&gt;This is a relatively easy task if you have a mac and &lt;a href=&#34;http://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;, which you can install with a single command in terminal. After installing homebrew, type this command into terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Wait for a few minutes and you will have Hugo installed on your computer. Alternatively you can download the software packages of Hugo for other platforms such as Windows (not as pro) or Linux &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;creating-a-repository-on-github:b970542703247f031f3abee5b7b4e900&#34;&gt;Creating a repository on Github&lt;/h4&gt;

&lt;p&gt;I created an empty repository on github named &amp;ldquo;blog&amp;rdquo;. This will ensure your blog will be acccessible at http://[username].github.io/blog. Alternatively you can create a new repo (if you don&amp;rsquo;t have one) named [username].github.io, then, your blog will be directly accessible at http://[username].github.io. My repository can be viewed &lt;a href=&#34;https://github.com/hkminegod/blog&#34;&gt;here&lt;/a&gt;, and website &lt;a href=&#34;https://pages.choy.in/blog&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;preparing-the-workspace:b970542703247f031f3abee5b7b4e900&#34;&gt;Preparing the workspace&lt;/h4&gt;

&lt;p&gt;Make a folder on your desktop named &lt;code&gt;blog-hugo&lt;/code&gt;. Then, make a new file in the blog-hugo directory called &amp;lsquo;config.yml&amp;rsquo; with the following plain-text using a text editor such as textedit or brackets: (make sure there are no tabs)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
baseurl: &amp;quot;http://[username].github.io/blog/&amp;quot;
title: &amp;quot;my blog&amp;quot;
params:
  Subtitle: &amp;quot;Tu etais formidable&amp;quot;
  description: &amp;quot;this is my blog&amp;quot;
  AuthorName: &amp;quot;choyin&amp;quot;
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Edit the file to your own likings, save and exit the file. Here are some information for the various parameters:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;baseurl: //if you named your repo blog, then change [username] to your Github username
title: //whatever title you want for your blog
Subtitle: //Subtitle for your blog, you can leave it blank if you want
description: //description of your blog, whatever you want
AuthorName: //Your name, or nickname
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, create two folders in your &lt;code&gt;blog&lt;/code&gt; folder. One inside the root folder named &lt;code&gt;content&lt;/code&gt;, and one inside &lt;code&gt;content&lt;/code&gt; named &lt;code&gt;posts&lt;/code&gt;. All your blog posts will be put in the folder &lt;code&gt;posts&lt;/code&gt;. Hugo automatically recognizes files under the &lt;code&gt;content&lt;/code&gt; folder.&lt;/p&gt;

&lt;h4 id=&#34;blogging-with-a-theme:b970542703247f031f3abee5b7b4e900&#34;&gt;Blogging with a theme&lt;/h4&gt;

&lt;p&gt;Now, let&amp;rsquo;s choose a theme for your blog! Hugo itself does not have any capability to create a website from nothing, so choose a nice looking theme from their official &lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;Theme Showcase&lt;/a&gt; For me, I downloaded &lt;a href=&#34;http://themes.gohugo.io/hyde/&#34;&gt;HYDE&lt;/a&gt; to work with, because I thought it was great.&lt;/p&gt;

&lt;p&gt;Make a new folder &lt;code&gt;themes&lt;/code&gt; and put the whole theme folder there. Rename your downloaded theme folder to something simple, in my case, &lt;code&gt;Hyde&lt;/code&gt;. This will be useful when you run the command to build Hugo.&lt;/p&gt;

&lt;h4 id=&#34;your-first-post:b970542703247f031f3abee5b7b4e900&#34;&gt;Your first post&lt;/h4&gt;

&lt;p&gt;Hugo makes it very easy to create a blogpost. Just make a markdown file named anything, and put it under &lt;code&gt;root/content/posts&lt;/code&gt;. I like to make the file name the date, like so: &lt;code&gt;20151221.md&lt;/code&gt; For the contents on the file, paste in this and adjust to your likings:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
title: &amp;quot;Hello world!&amp;quot;
date: &amp;quot;2015-12-21&amp;quot;
description: &amp;quot;I am a description&amp;quot;
categories:
    - &amp;quot;tutorial&amp;quot;
    - &amp;quot;hugo&amp;quot;
---
This will house the contents of your post, formattable in markdown.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Save it, and you are ready to deploy the site!&lt;/p&gt;

&lt;h4 id=&#34;deploying-the-site:b970542703247f031f3abee5b7b4e900&#34;&gt;Deploying the site&lt;/h4&gt;

&lt;p&gt;Using terminal, navigate to your blog root directory. For beginners that is not familiar with terminal, here is an example:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ cd workspace/blog&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Basically what this does is point terminal to the folder &lt;code&gt;workspace&lt;/code&gt; and then &lt;code&gt;workspace/blog&lt;/code&gt;. After that, type in terminal&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ hugo server --watch&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It will output a bunch of stuff, along with a line like this.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Web Server is available at http://127.0.0.1:1313/blog/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using any browser of your choice, navigate to that link and you will be able to see if your blog works! If you like it, type this last command in terminal (replace hyde with your installed theme):&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ hugo -t hyde&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You have now successfully deployed your site to your computer, available at the &lt;code&gt;/public&lt;/code&gt; directory.&lt;/p&gt;

&lt;h4 id=&#34;push-hugo-to-your-github-repo:b970542703247f031f3abee5b7b4e900&#34;&gt;Push Hugo to your Github Repo&lt;/h4&gt;

&lt;p&gt;Using commandline or &lt;a href=&#34;https://desktop.github.com/&#34;&gt;Github Desktop&lt;/a&gt;, push the &lt;code&gt;public&lt;/code&gt; folder to the repo&amp;rsquo;s &lt;code&gt;gh-pages&lt;/code&gt; branch. I personally find Github Desktop less confusing for beginners, but using the command line has multiple advantages as well.&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;re done! Your site will be live momentarily at http://[username].github.io/blog! Congratulations, that was easy!&lt;/p&gt;

&lt;h4 id=&#34;extras:b970542703247f031f3abee5b7b4e900&#34;&gt;Extras&lt;/h4&gt;

&lt;p&gt;If you have a custom domain like me, you can point your repository to your own domain using a CNAME. Create a new file called &lt;code&gt;CNAME&lt;/code&gt; in your repository&amp;rsquo;s root folder, and put your domain name in the file. For me, it is &lt;code&gt;pages.choy.in&lt;/code&gt;. Modify the CNAME in your domain&amp;rsquo;s DNS records and make sure that domain points to &lt;code&gt;[uesrname].github.io&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Google Code-in 2015!</title>
      <link>https://pages.choy.in/blog/posts/20151220/</link>
      <pubDate>Sun, 20 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://pages.choy.in/blog/posts/20151220/</guid>
      <description>&lt;p&gt;Bonjour le monde!
Hello World!
你好世界!&lt;/p&gt;

&lt;p&gt;This year is my first year joining Google Code-in, and I look forward to learning many skills for my studies in university next year! This year, I want to specifically improve my participation and contribution to the open source community, and have decided to work with FOSSASIA, a mentoring organisation for this year&amp;rsquo;s Google Code-in.&lt;/p&gt;

&lt;p&gt;This year&amp;rsquo;s Google Code-in is going to be interesting! I regret not having discovered this amazing and rewarding event earlier! This will also be my last Google Code-in :s&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>